"""order book

Revision ID: 3bcdbdb9b39d
Revises: 20eef3d2d398
Create Date: 2024-06-30 12:36:26.330014

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3bcdbdb9b39d'
down_revision: Union[str, None] = '20eef3d2d398'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('order_book',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_symbol', sa.Integer(), nullable=True),
    sa.Column('ask', sa.Text(), nullable=True),
    sa.Column('bid', sa.Text(), nullable=True),
    sa.Column('time_open', postgresql.TIMESTAMP(), nullable=True),
    sa.Column('time_create', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('time_update', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['id_symbol'], ['symbol.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_book_id_symbol'), 'order_book', ['id_symbol'], unique=False)
    op.create_index(op.f('ix_order_book_time_open'), 'order_book', ['time_open'], unique=False)
    op.drop_index('ix_open_interest_id_symbol', table_name='open_interest')
    op.drop_index('ix_open_interest_timestamp', table_name='open_interest')
    op.drop_table('open_interest')
    op.alter_column('buy_sell_ratio', 'time_create',
               existing_type=postgresql.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('buy_sell_ratio', 'time_update',
               existing_type=postgresql.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('kline', 'time_create',
               existing_type=postgresql.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('kline', 'time_update',
               existing_type=postgresql.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('symbol', 'time_create',
               existing_type=postgresql.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('symbol', 'time_update',
               existing_type=postgresql.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('symbol', 'time_update',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('symbol', 'time_create',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('kline', 'time_update',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('kline', 'time_create',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('buy_sell_ratio', 'time_update',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('buy_sell_ratio', 'time_create',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.create_table('open_interest',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_symbol', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('interest', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('time_create', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('time_update', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_symbol'], ['symbol.id'], name='open_interest_id_symbol_fkey'),
    sa.PrimaryKeyConstraint('id', name='open_interest_pkey')
    )
    op.create_index('ix_open_interest_timestamp', 'open_interest', ['timestamp'], unique=False)
    op.create_index('ix_open_interest_id_symbol', 'open_interest', ['id_symbol'], unique=False)
    op.drop_index(op.f('ix_order_book_time_open'), table_name='order_book')
    op.drop_index(op.f('ix_order_book_id_symbol'), table_name='order_book')
    op.drop_table('order_book')
    # ### end Alembic commands ###
